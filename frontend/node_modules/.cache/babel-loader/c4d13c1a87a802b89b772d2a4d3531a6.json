{"ast":null,"code":"const adminReducer = (state = {\n  admins: [],\n  isLoggedIn: false\n}, action) => {\n  switch (action.type) {\n    case 'LOADING_ADMINS':\n      return { ...state,\n        admins: [...state.admins, action.payload],\n        loading: true\n      };\n\n    case 'LOGIN_ADMINS':\n      console.log('ADDING ADMIN');\n      return { ...state,\n        isLoggedIn: true,\n        admins: action.payload,\n        loading: false\n      };\n\n    case \"LOGOUT_ADMIN\":\n      let logOutAdmins = state.admins.filter(admin => admin.id === action.payload.id);\n      return { ...state,\n        isLogged: true,\n        admins: logOutAdmins\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default adminReducer; // export default (\n//     state = {\n//       isLoggedIn: false,\n//       id: null,\n//       username: '',\n//     },\n//     action\n//   ) => {\n//     switch (action.type) {\n//       case 'LOGIN_USER':\n//         return {\n//           isLoggedIn: true,\n//           id: action.user.id,\n//           username: action.user.username,\n//         };\n//       case 'LOGOUT_USER':\n//         return {\n//           isLoggedIn: false,\n//           id: null,\n//           username: '',\n//         };\n//       default:\n//         return state;\n//     }\n//   };","map":{"version":3,"sources":["/Users/ifeoluwaakinremi-wade/Day_care/frontend/src/reducers/adminReducer.js"],"names":["adminReducer","state","admins","isLoggedIn","action","type","payload","loading","console","log","logOutAdmins","filter","admin","id","isLogged"],"mappings":"AAAA,MAAMA,YAAY,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,MAAM,EAAE,EAAT;AAAaC,EAAAA,UAAU,EAAE;AAAzB,CAAT,EAA0CC,MAA1C,KAAqD;AACtE,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,gBAAL;AACI,aAAO,EACP,GAAGJ,KADI;AAEPC,QAAAA,MAAM,EAAE,CAAC,GAAGD,KAAK,CAACC,MAAV,EAAkBE,MAAM,CAACE,OAAzB,CAFD;AAGPC,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKJ,SAAK,cAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,aAAO,EACH,GAAGR,KADA;AAEHE,QAAAA,UAAU,EAAE,IAFT;AAGHD,QAAAA,MAAM,EAAEE,MAAM,CAACE,OAHZ;AAIHC,QAAAA,OAAO,EAAE;AAJN,OAAP;;AAMJ,SAAK,cAAL;AACI,UAAIG,YAAY,GAAGT,KAAK,CAACC,MAAN,CAAaS,MAAb,CAAoBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaT,MAAM,CAACE,OAAP,CAAeO,EAAzD,CAAnB;AACA,aAAO,EAAC,GAAGZ,KAAJ;AAAWa,QAAAA,QAAQ,EAAE,IAArB;AAA2BZ,QAAAA,MAAM,EAAEQ;AAAnC,OAAP;;AACJ;AACI,aAAOT,KAAP;AAnBR;AAqBH,CAtBD;;AAwBA,eAAeD,YAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const adminReducer = (state = {admins: [], isLoggedIn: false}, action) => {\n    switch (action.type) {\n        case 'LOADING_ADMINS':\n            return {\n            ...state, \n            admins: [...state.admins, action.payload], \n            loading: true\n            }\n        case 'LOGIN_ADMINS':\n            console.log('ADDING ADMIN')\n            return {\n                ...state,\n                isLoggedIn: true,\n                admins: action.payload,\n                loading: false\n            }\n        case \"LOGOUT_ADMIN\":\n            let logOutAdmins = state.admins.filter(admin => admin.id === action.payload.id)\n            return {...state, isLogged: true, admins: logOutAdmins}\n        default:\n            return state;\n    }\n}\n\nexport default adminReducer\n\n// export default (\n//     state = {\n//       isLoggedIn: false,\n//       id: null,\n//       username: '',\n//     },\n//     action\n//   ) => {\n//     switch (action.type) {\n//       case 'LOGIN_USER':\n//         return {\n//           isLoggedIn: true,\n//           id: action.user.id,\n//           username: action.user.username,\n//         };\n//       case 'LOGOUT_USER':\n//         return {\n//           isLoggedIn: false,\n//           id: null,\n//           username: '',\n//         };\n//       default:\n//         return state;\n//     }\n//   };"]},"metadata":{},"sourceType":"module"}