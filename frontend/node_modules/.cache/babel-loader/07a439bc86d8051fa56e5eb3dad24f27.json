{"ast":null,"code":"var _jsxFileName = \"/Users/ifeoluwaakinremi-wade/Day_care/frontend/src/components/daycarecomp/Daycare.js\";\nimport React, { Component } from 'react';\nimport ToddlerFilterContainer from '../../containers/ToddlerFilterContainer';\nimport ToddlerTableRow from '../toddlercomp/ToddlerTableRow'; // Daycare component mapping through the props recieved from daycare container and passing props down to toddlerlist and toddler conatainer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Daycare extends Component {\n  constructor() {\n    super();\n\n    this.sort = () => {\n      let initialArray = this.props.getDaycare.toddlers;\n      console.log(initialArray);\n      this.setState({ ...this.state,\n        newArray: initialArray.sort((t, u) => {\n          if (t.name < u.name) {\n            return -1;\n          }\n\n          if (t.name > u.name) {\n            return 1;\n          }\n\n          return 0;\n        })\n      });\n      console.log(newArray);\n    };\n\n    this.unsort = () => {\n      let initialArray = this.props.getDaycare.toddlers; // this.setState({initialArray})\n\n      console.log(initialArray);\n      this.setState({ ...this.state,\n        newArray: initialArray.sort((t, u) => {\n          if (t.name < u.name) {\n            return 1;\n          }\n\n          if (t.name > u.name) {\n            return -1;\n          }\n\n          return 0;\n        })\n      });\n    };\n\n    this.state = {\n      newArray: []\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"table-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.sort,\n        children: \"Sort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 58\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.unsort,\n        children: \"Unsort\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), this.props.getDaycare.toddlers.map(toddler => {\n        //Passing props containing an array of toddlers and  their info\n        return /*#__PURE__*/_jsxDEV(ToddlerTableRow, {\n          toddlerDetail: toddler\n        }, toddler.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 32\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ToddlerFilterContainer, {\n        getToddlers: this.props.getDaycare\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Daycare;","map":{"version":3,"sources":["/Users/ifeoluwaakinremi-wade/Day_care/frontend/src/components/daycarecomp/Daycare.js"],"names":["React","Component","ToddlerFilterContainer","ToddlerTableRow","Daycare","constructor","sort","initialArray","props","getDaycare","toddlers","console","log","setState","state","newArray","t","u","name","unsort","render","map","toddler","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,sBAAP,MAAmC,yCAAnC;AACA,OAAOC,eAAP,MAA4B,gCAA5B,C,CAEA;;;;AAEA,MAAMC,OAAN,SAAsBH,SAAtB,CAAgC;AAC5BI,EAAAA,WAAW,GAAE;AACT;;AADS,SAObC,IAPa,GAON,MAAM;AACT,UAAIC,YAAY,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAzC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,WAAKM,QAAL,CAAc,EACX,GAAG,KAAKC,KADG;AACIC,QAAAA,QAAQ,EAAER,YAAY,CAACD,IAAb,CAAkB,CAACU,CAAD,EAAGC,CAAH,KAAQ;AAClD,cAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AAAC,mBAAO,CAAC,CAAR;AAAW;;AACjC,cAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AAAC,mBAAO,CAAP;AAAU;;AAChC,iBAAO,CAAP;AACA,SAJwB;AADd,OAAd;AAOAP,MAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AAEH,KAnBY;;AAAA,SAqBbI,MArBa,GAqBJ,MAAM;AACX,UAAIZ,YAAY,GAAG,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,QAAzC,CADW,CAEX;;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,WAAKM,QAAL,CAAc,EACX,GAAG,KAAKC,KADG;AACIC,QAAAA,QAAQ,EAAER,YAAY,CAACD,IAAb,CAAkB,CAACU,CAAD,EAAGC,CAAH,KAAQ;AAClD,cAAID,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AAAC,mBAAO,CAAP;AAAU;;AAChC,cAAIF,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAf,EAAqB;AAAC,mBAAO,CAAC,CAAR;AAAW;;AACjC,iBAAO,CAAP;AACA,SAJwB;AADd,OAAd;AAOH,KAhCY;;AAET,SAAKJ,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAGH;;AA6BDK,EAAAA,MAAM,GAAG;AAEL,wBACI;AAAK,MAAA,EAAE,EAAC,YAAR;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKd,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAC6C;AAAA;AAAA;AAAA;AAAA,cAD7C,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKa,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,cAHJ,EAKS,KAAKX,KAAL,CAAWC,UAAX,CAAsBC,QAAtB,CAA+BW,GAA/B,CAAoCC,OAAO,IAAI;AAAE;AAC9C,4BAAO,QAAC,eAAD;AAAkC,UAAA,aAAa,EAAEA;AAAjD,WAAsBA,OAAO,CAACC,EAA9B;AAAA;AAAA;AAAA;AAAA,gBAAP;AACH,OAFA,CALT,eASI,QAAC,sBAAD;AAAwB,QAAA,WAAW,EAAE,KAAKf,KAAL,CAAWC;AAAhD;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAaH;;AAlD2B;;AAqDhC,eAAeL,OAAf","sourcesContent":["import React, { Component } from 'react'\nimport ToddlerFilterContainer from '../../containers/ToddlerFilterContainer'\nimport ToddlerTableRow from '../toddlercomp/ToddlerTableRow'\n\n// Daycare component mapping through the props recieved from daycare container and passing props down to toddlerlist and toddler conatainer\n\nclass Daycare extends Component {\n    constructor(){\n        super()\n        this.state = {\n            newArray: []\n        }\n    }\n\n    sort = () => {\n        let initialArray = this.props.getDaycare.toddlers\n        console.log(initialArray)\n        this.setState({\n           ...this.state, newArray: initialArray.sort((t,u) =>{\n            if (t.name < u.name) {return -1;}\n            if (t.name > u.name) {return 1;}\n            return 0;\n           })\n        })\n        console.log(newArray)\n    \n    }\n\n    unsort = () => {\n        let initialArray = this.props.getDaycare.toddlers\n        // this.setState({initialArray})\n        console.log(initialArray)\n        this.setState({\n           ...this.state, newArray: initialArray.sort((t,u) =>{\n            if (t.name < u.name) {return 1;}\n            if (t.name > u.name) {return -1;}\n            return 0;\n           })\n        })\n    }\n\n    render() { \n       \n        return (\n            <div id=\"table-list\">\n                <button onClick={this.sort}>Sort</button><br />\n                <button onClick={this.unsort}>Unsort</button>\n                <br />\n                    {/* eslint-disable-next-line array-callback-return*/}\n                    {this.props.getDaycare.toddlers.map( toddler => { //Passing props containing an array of toddlers and  their info\n                        return <ToddlerTableRow key={toddler.id} toddlerDetail={toddler} />\n                    })}\n                     {/* passing props of the whole daycare object */}\n                <ToddlerFilterContainer getToddlers={this.props.getDaycare}/> \n            </div>\n        )\n    }\n}\n\nexport default Daycare \n"]},"metadata":{},"sourceType":"module"}