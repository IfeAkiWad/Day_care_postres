{"ast":null,"code":"import uuid from \"uuid\";\n\nconst toddlerReducer = (state = {\n  toddlers: []\n}, action) => {\n  switch (action.type) {\n    case 'LOADING_TODDLERS':\n      return { ...state,\n        toddlers: [...state.toddlers],\n        loading: true\n      };\n\n    case 'ADD_TODDLER':\n      const thisToddler = {\n        id: uuid(),\n        text: action.payload.toddler\n      };\n      return {\n        // ...state,\n        // toddlers: action.toddlers,\n        toddlers: state.toddlers.concat(thisToddler),\n        loading: false\n      };\n    // return {...state, toddlers: [...state.toddlers, action.toddler]} \n\n    case \"REMOVE_TODDLER\":\n      let deleteToddlers = state.toddlers.filter(thisToddler => thisToddler.id !== action.id);\n      return { ...state,\n        toddlers: deleteToddlers\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default toddlerReducer;","map":{"version":3,"sources":["/Users/ifeoluwaakinremi-wade/Day_care/frontend/src/reducers/toddlerReducer.js"],"names":["uuid","toddlerReducer","state","toddlers","action","type","loading","thisToddler","id","text","payload","toddler","concat","deleteToddlers","filter"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;;AAGA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAT,EAAyBC,MAAzB,KAAoC;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,kBAAL;AACI,aAAO,EACP,GAAGH,KADI;AAEPC,QAAAA,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAV,CAFH;AAGPG,QAAAA,OAAO,EAAE;AAHF,OAAP;;AAKJ,SAAK,aAAL;AACI,YAAMC,WAAW,GAAG;AAChBC,QAAAA,EAAE,EAAER,IAAI,EADQ;AAEhBS,QAAAA,IAAI,EAAEL,MAAM,CAACM,OAAP,CAAeC;AAFL,OAApB;AAIA,aAAO;AACH;AACA;AACAR,QAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeS,MAAf,CAAsBL,WAAtB,CAHP;AAIHD,QAAAA,OAAO,EAAE;AAJN,OAAP;AAMA;;AACJ,SAAK,gBAAL;AACI,UAAIO,cAAc,GAAGX,KAAK,CAACC,QAAN,CAAeW,MAAf,CAAsBP,WAAW,IAAIA,WAAW,CAACC,EAAZ,KAAmBJ,MAAM,CAACI,EAA/D,CAArB;AACA,aAAO,EAAC,GAAGN,KAAJ;AAAWC,QAAAA,QAAQ,EAAEU;AAArB,OAAP;;AACJ;AACI,aAAOX,KAAP;AAvBR;AAyBH,CA1BD;;AA4BA,eAAeD,cAAf","sourcesContent":["import uuid from \"uuid\";\n\n\nconst toddlerReducer = (state = {toddlers: []}, action) => {\n    switch (action.type) {\n        case 'LOADING_TODDLERS':\n            return {\n            ...state, \n            toddlers: [...state.toddlers], \n            loading: true\n        }\n        case 'ADD_TODDLER':\n            const thisToddler = {\n                id: uuid(),\n                text: action.payload.toddler,\n              };\n            return {\n                // ...state,\n                // toddlers: action.toddlers,\n                toddlers: state.toddlers.concat(thisToddler),\n                loading: false\n            }\n            // return {...state, toddlers: [...state.toddlers, action.toddler]} \n        case \"REMOVE_TODDLER\":\n            let deleteToddlers = state.toddlers.filter(thisToddler => thisToddler.id !== action.id)\n            return {...state, toddlers: deleteToddlers}\n        default:\n            return state;\n    }\n}\n\nexport default toddlerReducer"]},"metadata":{},"sourceType":"module"}